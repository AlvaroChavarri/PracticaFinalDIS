package vaadinarchetypeapplication.views.biblioteca;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import com.vaadin.flow.component.Tag;
import com.vaadin.flow.component.charts.model.XAxis;
import com.vaadin.flow.component.charts.model.YAxis;
import com.vaadin.flow.component.dependency.JsModule;
import com.vaadin.flow.component.grid.Grid;
import com.vaadin.flow.component.polymertemplate.Id;
import com.vaadin.flow.component.polymertemplate.PolymerTemplate;
import com.vaadin.flow.data.renderer.TemplateRenderer;
import com.vaadin.flow.router.AfterNavigationEvent;
import com.vaadin.flow.router.AfterNavigationObserver;
import com.vaadin.flow.router.PageTitle;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.templatemodel.TemplateModel;
import vaadinarchetypeapplication.views.biblioteca.BibliotecaView.BibliotecaViewModel;
import vaadinarchetypeapplication.views.main.MainView;
import com.vaadin.flow.router.RouteAlias;

@Route(value = "biblioteca", layout = MainView.class)
@PageTitle("Biblioteca")
@JsModule("./src/views/biblioteca/biblioteca-view.js")
@Tag("biblioteca-view")
@RouteAlias(value = "", layout = MainView.class)
public class BibliotecaView extends PolymerTemplate<BibliotecaViewModel> implements AfterNavigationObserver {

    // This is the Java companion file of a design
    // You can find the design file in
    // /frontend/src/views/src/views/biblioteca/biblioteca-view.js
    // The design can be easily edited by using Vaadin Designer
    // (vaadin.com/designer)

    /**
     * All data we send to the client (template). Implementation is generated by the
     * framework.
     */
    public static interface BibliotecaViewModel extends TemplateModel {

        public void setItems(List<Client> items);
    }

    public BibliotecaView() {
    }

    @Override
    public void afterNavigation(AfterNavigationEvent event) {
        // Set some data when this view is displayed.
        List<Client> films = Arrays.asList(
                createFilm(1, "Narnia", "Pelicula Leon", "Ficcion", "2005-12-09"),
                createFilm(2, "Spiderman", "Pelicula Superheroe", "Accion", "2002-06-21"),
                createFilm(3, "Superman", "Pelicula Superman", "Accion", "1979-02-08"),
                createFilm(4, "Piratas del Caribe", "Pelicula piratas", "Aventura", "2003-08-14"),
                createFilm(5, "Avatar", "Pelicula azules", "Ficcion", "2009-12-18"));
        getModel().setItems(films);
    }

    private Client createFilm(int id, String client, String amount, String status, String date) {
        Client f = new Client();
        f.setId(id);
        f.setClient(client);
        f.setAmount(amount);
        f.setStatus(status);
        f.setDate(date);

        return f;
    }
}
